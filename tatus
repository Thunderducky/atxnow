[1mdiff --git a/assets/js/script.js b/assets/js/script.js[m
[1mindex c04b15c..ce357f1 100644[m
[1m--- a/assets/js/script.js[m
[1m+++ b/assets/js/script.js[m
[36m@@ -44,7 +44,7 @@[m [mconst topHeadEl = document.getElementById("topHead");[m
 // description - Table heading cell text[m
 // field - Name of the field in artist object[m
 //=====================================================================[m
[31m-const artistParams = [[m
[32m+[m[32mconst artistTableParams = [[m
     { description: "Name", field: "name" },[m
     { description: "From", field: "origin" },[m
     { description: "Genre", field: "genre" },[m
[36m@@ -76,7 +76,7 @@[m [mbtnSearchEl.addEventListener("click", function () {[m
     eventListEl.innerHTML = "";[m
     let artist = escape(inputArtistEl.value.trim());[m
     if (artist === "") {[m
[31m-        getAreaEvents(7);[m
[32m+[m[32m        getAreaEvents();[m
     } else {[m
         getArtistData(artist, displayArtist);[m
     }[m
[36m@@ -96,11 +96,22 @@[m [minputArtistEl.addEventListener("keypress", function (event) {[m
     }[m
 });[m
 [m
[31m-[m
 //==============================================================================[m
 // Helper Functions[m
 //==============================================================================[m
 [m
[32m+[m[32m//=====================================================================[m
[32m+[m[32m// Call the API to get the current location[m
[32m+[m[32m//=====================================================================[m
[32m+[m[32mfunction getLocationPromise() {[m
[32m+[m[32m    const locationUrl = "https://json.geoiplookup.io/";[m
[32m+[m[32m    return axios.get(locationUrl)[m
[32m+[m[32m        .then(function (response) {[m
[32m+[m[32m            userLocation = parseLocation(response);[m
[32m+[m[32m            return userLocation;[m
[32m+[m[32m        });[m
[32m+[m[32m}[m
[32m+[m
 //=====================================================================[m
 // Get Artist Events[m
 //  Call the API to get Artist Event Data for a given artist[m
[36m@@ -111,30 +122,9 @@[m [minputArtistEl.addEventListener("keypress", function (event) {[m
 function getArtistEvents(artist, days = DAYS_ARTIST, page = 1) {[m
     let artistUrl = "https://api.songkick.com/api/3.0/artists/mbid:";[m
     artistUrl += artist.mbid;[m
[31m-    artistUrl += "/calendar.json?apikey=" + sk + getDateQuery(days) + getPageQuery(page, MAX_QUERY_RESULTS);[m
[31m-[m
[32m+[m[32m    artistUrl += "/calendar.json?" + getQuery(days, page, MAX_QUERY_RESULTS);[m
     console.log(artistUrl);[m
[31m-    axios.get(artistUrl)[m
[31m-        .then(function (response) {[m
[31m-            console.log("ARTIST DATA HERE", response);[m
[31m-            let events = parseEvents(response);[m
[31m-            events.sort(sortFunc);[m
[31m-            let totalEntries = response.data.resultsPage.totalEntries;[m
[31m-            displayEvents(events, " of " + totalEntries + " events coming up for " + artist.name);[m
[31m-        })[m
[31m-[m
[31m-}[m
[31m-[m
[31m-//=====================================================================[m
[31m-// Call the API to get the current location[m
[31m-//=====================================================================[m
[31m-function getLocationPromise() {[m
[31m-    const locationUrl = "https://json.geoiplookup.io/";[m
[31m-    return axios.get(locationUrl)[m
[31m-        .then(function (response) {[m
[31m-            userLocation = parseLocation(response);[m
[31m-            return userLocation;[m
[31m-        });[m
[32m+[m[32m    return axios.get(artistUrl);[m
 }[m
 [m
 //=====================================================================[m
[36m@@ -147,7 +137,7 @@[m [mfunction getLocationPromise() {[m
 function getAreaEvents(days = DAYS_CURRENT) {[m
     // 1. API REQUEST - Look up the User Location based off IP Address[m
     // 2. API REQUEST - Find Metro Areas based off Location Data[m
[31m-    // 3. API REQUEST - Request Event Info from Each Metro Area[m
[32m+[m[32m    // 3. API REQUESTS - Request Event Info from Each Metro Area[m
 [m
 [m
     getLocationPromise()[m
[36m@@ -179,6 +169,7 @@[m [mfunction getAreaEvents(days = DAYS_CURRENT) {[m
         }).then(function (events) {[m
             // Display the Events on the Page[m
             displayEvents(events, "events in " + userLocation.city);[m
[32m+[m[32m            labelStatusEl.textContent = "";[m
         })[m
         .catch(function (error) {[m
             //======================================================[m
[36m@@ -189,55 +180,20 @@[m [mfunction getAreaEvents(days = DAYS_CURRENT) {[m
         });[m
 }[m
 [m
[31m-//=====================================================================[m
[31m-// Returns Promises to query Metro Areas for Events[m
[31m-// areas = array of Metro Area Objects from soundkick[m
[31m-// days = number of days out to search. leave undefined for no max date[m
[31m-//=====================================================================[m
[31m-function buildEventPromiseArray(areas, days, page = 1) {[m
[31m-    let promises = [];[m
[31m-[m
[31m-    // Create promises to get the Events for Each Metro Area[m
[31m-    // returns the promises array[m
[31m-    areas.forEach(function (area) {[m
[31m-        let url = "https://api.songkick.com/api/3.0/metro_areas/" + area.id +[m
[31m-            "/calendar.json?apikey=" + sk + getDateQuery(days)[m
[31m-            + getPageQuery(page, MAX_QUERY_RESULTS);[m
[31m-        promises.push(axios.get(url));[m
[31m-    })[m
[31m-    return promises;[m
[31m-}[m
[31m-[m
[31m-//=====================================================================[m
[31m-// Returns URL to get a list of Metro Areas based on location[m
[31m-//=====================================================================[m
[31m-function buildMetroUrl(location) {[m
[31m-    // Get Location Info[m
[31m-    let queryUrl = "https://api.songkick.com/api/3.0/search/locations.json?";[m
[31m-[m
[31m-    // Use Latitude and Longitude if available else use city name[m
[31m-    if (location.lat && location.lon) {[m
[31m-        queryUrl += "location=geo:" + location.lat + "," + location.lon + "&apikey=" + sk;[m
[31m-    } else {[m
[31m-        queryUrl += "query=" + location.city.replace(" ", "+") + "&apikey=" + sk;[m
[31m-    }[m
[31m-    return queryUrl;[m
[31m-}[m
[31m-[m
 //=====================================================================[m
 // Call the APIs to get the artist Data[m
 //=====================================================================[m
[31m-function getArtistData(artist, success, fail) {[m
[32m+[m[32mfunction getArtistData(strArtist, success, fail) {[m
     // Fix the input data. [m
     // 1. Remove leading and trailing spaces[m
     // 2. Replace spaces with + for use in query string[m
[31m-    artist = artist.trim().replace(" ", "+");[m
[32m+[m[32m    strArtist = strArtist.trim().replace(" ", "+");[m
 [m
     // Create the API Urls[m
     const base = "https://www.theaudiodb.com/api/v1/json/1";[m
[31m-    const artistUrl = base + "/search.php?s=" + artist;[m
[31m-    const discographyUrl = base + "/discography.php?s=" + artist;[m
[31m-    const topUrl = base + "/track-top10.php?s=" + artist;[m
[32m+[m[32m    const artistUrl = base + "/search.php?s=" + strArtist;[m
[32m+[m[32m    const discographyUrl = base + "/discography.php?s=" + strArtist;[m
[32m+[m[32m    const topUrl = base + "/track-top10.php?s=" + strArtist;[m
 [m
     // Use Promise.all to run all get requests in parallel[m
     // 1. Get the Artist Info [m
[36m@@ -269,14 +225,23 @@[m [mfunction getArtistData(artist, success, fail) {[m
             }[m
 [m
             // Parse the data we need into objects;[m
[31m-            let artist = parseArtist(artistResponse.data.artists[0]);[m
[32m+[m[32m            var artist = parseArtist(artistResponse.data.artists[0]); // Make this var so it can be accessed in then[m
             artist.albums = parseAlbums(discResponse.data.album);[m
             artist.tracks = parseTracks(topResponse.data.track);[m
 [m
[31m-            getArtistEvents(artist, DAYS_ARTIST);[m
[31m-[m
[31m-            // Return the Artist Object to the user provided success handler[m
[31m-            if (success) success(artist);[m
[32m+[m[32m            return getArtistEvents(artist, DAYS_ARTIST);[m
[32m+[m[32m        })[m
[32m+[m[32m        .then(function (response) {[m
[32m+[m[32m            // Parse and Display The Events[m
[32m+[m[32m            //console.log("Artist Events", response);[m
[32m+[m[32m            let events = parseEvents(response);[m
[32m+[m[32m            events.sort(sortFunc);[m
[32m+[m[32m            artist.events = events;[m
[32m+[m[32m            artist.totalEntries = response.data.resultsPage.totalEntries;[m
[32m+[m[32m            return artist;[m
[32m+[m[32m        })[m
[32m+[m[32m        .then (function(response) {[m
[32m+[m[32m            success(artist);[m
         })[m
         .catch(function (error) {[m
             //=====================================================[m
[36m@@ -309,8 +274,42 @@[m [mfunction getArtistData(artist, success, fail) {[m
         });[m
 }[m
 [m
[32m+[m[32m//=====================================================================[m
[32m+[m[32m// Returns Promises to query Metro Areas for Events[m
[32m+[m[32m// areas = array of Metro Area Objects from soundkick[m
[32m+[m[32m// days = number of days out to search. leave undefined for no max date[m
[32m+[m[32m//=====================================================================[m
[32m+[m[32mfunction buildEventPromiseArray(areas, days, page = 1) {[m
[32m+[m[32m    let promises = [];[m
[32m+[m
[32m+[m[32m    // Create promises to get the Events for Each Metro Area[m
[32m+[m[32m    // returns the promises array[m
[32m+[m[32m    areas.forEach(function (area) {[m
[32m+[m[32m        let url = "https://api.songkick.com/api/3.0/metro_areas/" + area.id +[m
[32m+[m[32m            "/calendar.json?" + getQuery(days, page, MAX_QUERY_RESULTS);[m
[32m+[m[32m        promises.push(axios.get(url));[m
[32m+[m[32m    })[m
[32m+[m[32m    return promises;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m//=====================================================================[m
[32m+[m[32m// Returns URL to get a list of Metro Areas based on location[m
[32m+[m[32m//=====================================================================[m
[32m+[m[32mfunction buildMetroUrl(location) {[m
[32m+[m[32m    // Get Location Info[m
[32m+[m[32m    let queryUrl = "https://api.songkick.com/api/3.0/search/locations.json?";[m
[32m+[m[32m    let sk2 = "&apikey=" + sk;[m
[32m+[m[32m    // Use Latitude and Longitude if available else use city name[m
[32m+[m[32m    if (location.lat && location.lon) {[m
[32m+[m[32m        queryUrl += "location=geo:" + location.lat + "," + location.lon + sk2;[m
[32m+[m[32m    } else {[m
[32m+[m[32m        queryUrl += "query=" + location.city.replace(" ", "+") + sk2;[m
[32m+[m[32m    }[m
[32m+[m[32m    return queryUrl;[m
[32m+[m[32m}[m
[32m+[m
 //=====================================================[m
[31m-// Parse the events for an Artist or Metro Area[m
[32m+[m[32m// Parse the Location Data[m
 //=====================================================[m
 function parseLocation(response) {[m
     var locationData = {[m
[36m@@ -322,6 +321,9 @@[m [mfunction parseLocation(response) {[m
     return locationData;[m
 }[m
 [m
[32m+[m[32m//=====================================================[m
[32m+[m[32m// Parse the events for an Artist or Metro Area[m
[32m+[m[32m//=====================================================[m
 function parseEvents(response) {[m
     let respEvents = [];[m
     let events = response.data.resultsPage.results.event;[m
[36m@@ -526,6 +528,9 @@[m [mfunction displayArtist(artist) {[m
     // Display the artist details table[m
     displayArtistTable(artist);[m
 [m
[32m+[m[32m    // Display concerts[m
[32m+[m[32m    displayEvents(artist.events, " of " + artist.totalEntries + " events coming up for " + artist.name);[m
[32m+[m
     // Display the album discography list[m
     displayAlbums(artist.albums);[m
 [m
[36m@@ -543,7 +548,7 @@[m [mfunction displayArtist(artist) {[m
 //=====================================================================[m
 function displayArtistTable(artist) {[m
     // Configure Each parameter in the table[m
[31m-    artistParams.forEach(function (param) {[m
[32m+[m[32m    artistTableParams.forEach(function (param) {[m
         let row = document.createElement("tr");[m
         let col1 = document.createElement("th");[m
         col1.textContent = param.description;[m
[36m@@ -566,10 +571,6 @@[m [mfunction displayArtistTable(artist) {[m
     let imgRow = document.createElement("tr");[m
     let imgCol = document.createElement("td");[m
     imgCol.setAttribute("colspan", "2");[m
[31m-    //let img = document.createElement("img");[m
[31m-    //img.setAttribute("src", artist.logo);[m
[31m-    //img.setAttribute("alt", artist.name + " logo");[m
[31m-    //imgCol.appendChild(img);[m
     imgRow.appendChild(imgCol);[m
     artistTableEl.appendChild(imgRow);[m
 }[m
[36m@@ -632,6 +633,13 @@[m [mfunction getYouTube(src) {[m
     return '<iframe src="' + src + '" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>';[m
 }[m
 [m
[32m+[m[32m//====================================================================[m
[32m+[m[32m// Return the full query string[m
[32m+[m[32m//====================================================================[m
[32m+[m[32mfunction getQuery(days, page, perPage) {[m
[32m+[m[32m    return "apikey=" + sk + getDateQuery(days) + getPageQuery(page, perPage);[m
[32m+[m[32m}[m
[32m+[m
 // ===================================================================[m
 // Return the query for min_date and max_date[m
 // days = days from today's date[m
[36m@@ -713,9 +721,9 @@[m [mfunction onError(error) {[m
     labelStatusEl.classList.add("is-danger");[m
 }[m
 [m
[31m-////////////////////////////////////[m
[31m-// MAIN - Code that runs at startup[m
[31m-////////////////////////////////////[m
[32m+[m[32m/**************************************/[m
[32m+[m[32m/* MAIN - Code that runs at startup   */[m
[32m+[m[32m/**************************************/[m
 [m
 // Get Concert Data for the current location[m
 getAreaEvents();[m
\ No newline at end of file[m
